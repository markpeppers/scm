(define (positive? x) (> x 0))
(define (negative? x) (< x 0))
(define (search f neg-point pos-point)
  (define (avg x y) (/ (+ x y) 2))
  (define (close-enough? x y) (< (abs (- x y)) .00001))
  (let ((midpoint (avg neg-point pos-point)))
    (if (close-enough? neg-point pos-point)
      midpoint
      (let ((test-value (f midpoint)))
	(cond ((positive? test-value)
	       (search f neg-point midpoint))
	      ((negative? test-value)
	       (search f midpoint pos-point))
	      (else midpoint))))))
(define (half-interval f a b)
  (cond ((and (negative? (f a)) (positive? (f b)))
	 (search f a b))
	((and (positive? (f a)) (negative? (f b)))
	 (search f b a))
	(else
	  0)))
